syntax = "proto3";

package grpcapi;

option go_package = "github.com/vaidik-bajpai/distributed-task-scheduler/pkg/grpcapi";

enum TaskStatus {
    QUEUED = 0;
    STARTED = 1;
    COMPLETE = 2;
    FAILED = 3;
}

service WorkerService {
    rpc SubmitTask(TaskRequest) returns (TaskResponse) {}
}

message TaskRequest {
    string taskID = 1;
    string data = 2;
}

message TaskResponse {
    string taskID = 1;
    string message = 2;
    bool success = 3;
}

service CoordinatorService {
    rpc SubmitTask(ClientTaskRequest) returns (ClientTaskResponse) {}
    rpc SendHeartBeat(HeartbeatRequest) returns (HeartbeatResponse) {}
    rpc UpdateTaskStatus(UpdateTaskStatusRequest) returns (UpdateTaskStatusResponse) {}
}

message ClientTaskRequest {
    string data = 1;
}

message ClientTaskResponse {
    string message = 1;
    string taskID = 2;
}

message HeartbeatRequest {
    uint32 workerID = 1;
    string address = 2;
}

message HeartbeatResponse {
    bool acknowledged = 1;
}

message UpdateTaskStatusRequest {
    string taskID = 1;
    TaskStatus status = 2;
    int64 startedAt = 3;
    int64 completedAt = 4;
    int64 failedAt = 5;
}

message UpdateTaskStatusResponse {
    bool success = 1;
}